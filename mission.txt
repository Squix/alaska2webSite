Ce fichier comprend diverses notes prises par le consultant Paul MORIZOT pour l'aider à réaliser sa mission.
Je pense qu'elles peuvent être utiles pour comprendre le fonctionnement du site et ainsi aider un éventuel consultant suivant.

1 - MISSION
    Développer un formulaire qui permet de faire le tri dans la base de données du site(un fichier CSV)
    Ce formulaire comporte 2 parties :
        La première pour trier selon les colonnes 2 à 19 du fichier CSV
        La deuxième pour trier selon les colonnes 20 à 26 du fichier CSV
    Se formulaire doit se trouver dans une nouvelle section du site (nouveau composant)

2 - ARCHITECTURE EXISTANTE
    Le site est composé d'un backend expressJS, et d'un frontend ReactJS, qui sont lancés en même temps sur le serveur (npm start)
    ReactJS est supplanté par PreactJS
    On peut lancer uniquement le frontend en mode dev pour le modifier sereinement avec "npm run client-dev"
        Attention, avant cela le serveur doit aussi être lancé pour éviter une erreur SSL (npm run server)
    Lorsqu'on lance le serveur, il faut impérativement utiliser le port 8443 (sinon erreur SSL)
        Il faut aussi que la clé SSL soit présente dans un dossier '../key'
    PreactJS utilise Redux, "PreactRedux"
    Présence de fichiers étranges en _bu dans le code, ça semble être de la backup, possiblement liée à l'IDE du précédent consultant ?
    Pour le composant "material", il existe des versions alternatives, probablement liée aux différentes périodes du concours ALASKA
        La version alternative actuelle est "material.js"
        La version "material_bu2.js" semble demander une authentification
    Le Frontend utilise Bootstrap4
    Le script npm "start" permet de lancer en même temps le serveur et le client, mais SURTOUT, de les relier ensemble par je ne sais quelle magie vaudoo !

3 - TRAVAIL EFFECTUÉ
    Création d'un formulaire reprenant toutes les valeurs données
        Composant InputRange pour sélectionner des plages de données
        Composant DynamicSelect pour sélectionner parmi une liste de critères
        Système capable de détecter la modification d'un critère et de créer une jolie URL à envoyer au serveur
        Affichage des résultats en dessous du formulaire
        Système de reset du formulaire
        Fonctionnalité par cacher par défaut chaque élément d'interface, et changer leur visibilité en un clic
        Fonctionnalité pour désactiver totalement le traitement des images, également présente pour la compression
        Système qui définit automatiquement l'extension en fonction des paramètres sélectionnés (raw/compression)
    Création d'un endpoint du serveur pour trier le fichier csv de la BDD
        Controller SorterController
        Fichier csv de la BDD placé dans server/public
        Package node-csv-query installé pour la communication avec ce fichier
        Création d'un script pour convertir la BDD csv en fichier utilisable par node-csv-query
        Ajout d'un système pour modifier à la volée l'extension des fichiers renvoyés
    Ajout d'un système approprié pour dev sereinement sur le serveur et le client
        Modification du script npm client-dev pour utiliser watch et preact build (on n'a pas besoin du serv intégré de preact watch)

4 - PROBLÈMES RECONTRÉS
    Après la mise à jour des différentes dépendances, ScrollableAnchor ne fonctionne plus (erreur interne) ==> SOLUTION: suppression de ScrollableAnchor, on reste sur un système classique de liens

5 - À faire
